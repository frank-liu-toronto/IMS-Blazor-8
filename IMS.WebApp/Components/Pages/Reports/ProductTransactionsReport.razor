@page "/productreport"
@using IMS.UseCases.Reports.interfaces

@rendermode InteractiveServer

@inject ISearchProductTransactionsUseCase SearchProductTransactionsUseCase

<h3>Product Transactions</h3>
<br/>

<div class="row">
    <div class="col">
        <label for="prod">Product Name</label>
        <input type="text" id="prod" class="form-control" @bind-value="prodName" />
    </div>
    <div class="col">
        <label for="df">Date From</label>
        <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
    </div>
    <div class="col">
        <label for="dt">Date To</label>
        <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
    </div>
    <div class="col">
        <label for="at">Activity Type</label>
        <select id="at" class="form-control" @bind="activityTypeId">
            <option value="0"></option>
            <option value="1">Produce Product</option>
            <option value="2">Sell Product</option>
        </select>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="SearchProducts">Search</button>
    </div>
</div>

@if (productTransactions != null && productTransactions.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Product</th>
                <th>Activity</th>
                <th>Qty Before</th>
                <th>Qty After</th>
                <th>Unit Price</th>
                <th>SO#</th>
                <th>Production #</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var it in productTransactions)
            {
                <tr>
                    <td>@it.TransactionDate.ToString("MM/dd/yyyy")</td>
                    <td>@it.Product.ProductName</td>
                    <td>
                        @if (it.ActivityType == ProductTransactionType.ProduceProduct)
                        {
                            <text>Produce</text>
                        }
                        else if (it.ActivityType == ProductTransactionType.SellProduct)
                        {
                            <text>Sell</text>
                        }
                    </td>
                    <td>@it.QuantityBefore</td>
                    <td>@it.QuantityAfter</td>
                    <td>@it.UnitPrice?.ToString("c")</td>
                    <td>@it.SONumber</td>
                    <td>@it.ProdutionNumber</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private string prodName;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activityTypeId = 0;
    private IEnumerable<ProductTransaction>? productTransactions;

    private async Task SearchProducts()
    {
        ProductTransactionType? prodType = null;
        if (activityTypeId != 0) prodType = (ProductTransactionType)activityTypeId;

        productTransactions = await SearchProductTransactionsUseCase.ExecuteAsync
        (
            prodName,
            dateFrom,
            dateTo,
            prodType
        );
    }

}
