@page "/inventoryreport"
@using IMS.UseCases.Reports.interfaces

@rendermode InteractiveServer

@inject ISearchInventoryTransactionsUseCase SearchInventoryTransactionsUseCase

<h3>Inventory Transactions</h3>
<br/>

<div class="row">
    <div class="col">
        <label for="inv">Inventory Name</label>
        <input type="text" id="inv" class="form-control" @bind-value="invName" />
    </div>
    <div class="col">
        <label for="df">Date From</label>
        <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
    </div>
    <div class="col">
        <label for="dt">Date To</label>
        <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
    </div>
    <div class="col">
        <label for="at">Activity Type</label>
        <select id="at" class="form-control" @bind-value="activityTypeId" @bind-value:event="onchange">
            <option value="0"></option>
            <option value="1">Purchase Inventory</option>
            <option value="2">Produce Product</option>
        </select>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="SearchInventories">Search</button>
    </div>
</div>

@if (inventoryTransactions != null && inventoryTransactions.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Inventory</th>
                <th>Activity</th>
                <th>Qty Before</th>
                <th>Qty After</th>
                <th>PO#</th>
                <th>Production #</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var it in inventoryTransactions)
            {
                <tr>
                    <td>@it.TransactionDate.ToString("MM/dd/yyyy")</td>
                    <td>@it.Inventory.InventoryName</td>
                    <td>
                        @if (it.ActivityType == InventoryTransactionType.PurchaseInventory)
                        {
                            <text>Purchase</text>
                        }
                        else if (it.ActivityType == InventoryTransactionType.ProduceProduct)
                        {
                            <text>Produce</text>
                        }
                    </td>
                    <td>@it.QuantityBefore</td>
                    <td>@it.QuantityAfter</td>
                    <td>@it.PONumber</td>
                    <td>@it.ProdutionNumber</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private string invName;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activityTypeId = 0;
    private IEnumerable<InventoryTransaction>? inventoryTransactions;

    private async Task SearchInventories()
    {
        InventoryTransactionType? invType = null;
        if (activityTypeId != 0) invType = (InventoryTransactionType)activityTypeId;

        inventoryTransactions = await SearchInventoryTransactionsUseCase.ExecuteAsync
        (
            invName,
            dateFrom,
            dateTo,
            invType
        );
    }

}
