
@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg bg-dark navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Inventory Management</a>
        <button 
            @onclick="ToggleMenu"
            class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="@collapseOrNot navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item" @onclick="CollapseDropdownMenus">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item" @onclick="CollapseDropdownMenus">
                    <NavLink class="nav-link" href="inventories">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Inventories
                    </NavLink>
                </li>
                <li class="nav-item" @onclick="CollapseDropdownMenus">
                    <NavLink class="nav-link" href="products">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Products
                    </NavLink>
                </li>
                <li class="nav-item dropdown" @onclick="ToggleActivities">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Activities
                    </a>

                    @if (!collapseActivitiesMenu)
                    {
                        <ul class="dropdown-menu show">
                            <li>
                                <NavLink class="dropdown-item" href="purchase">
                                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Purchase
                                </NavLink>
                            </li>
                            <li>
                                <NavLink class="dropdown-item" href="produce">
                                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Produce
                                </NavLink>
                            </li>
                            <li>
                                <NavLink class="dropdown-item" href="sell">
                                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Sell
                                </NavLink>
                            </li>
                        </ul>
                    }                       
                </li>

                <li class="nav-item dropdown" @onclick="ToggleReports">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Reports
                    </a>
                    @if (!collapseReportsMenu)
                    {
                        <ul class="dropdown-menu show">
                            <li>
                                <NavLink class="dropdown-item" href="inventoryreport">
                                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Inventory Report
                                </NavLink>
                            </li>
                            <li>
                                <NavLink class="dropdown-item" href="productreport">
                                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Product Report
                                </NavLink>
                            </li>
                        </ul>
                    }
                    
                </li>
            </ul>

            <AuthorizeView>
                <Authorized>
                    <div class="navbar-nav px-3">
                        <NavLink class="nav-link" href="Account/Manage">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                        </NavLink>
                    </div>
                    <div class="navbar-nav px-3">
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="btn btn-link nav-link">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                            </button>
                        </form>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="navbar-nav px-3">
                        <NavLink class="nav-link" href="Account/Register">
                            <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                        </NavLink>
                    </div>
                    <div class="navbar-nav px-3">
                        <NavLink class="nav-link" href="Account/Login">
                            <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>

        </div>
    </div>
</nav>

@code {
    private string? currentUrl;
    private bool collapseNavMenu = true;
    private string collapseOrNot = "collapse";

    private bool collapseActivitiesMenu = true;
    private bool collapseReportsMenu = true;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    private void ToggleMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        collapseOrNot = collapseNavMenu ? "collapse" : string.Empty;
    }

    private void ToggleActivities()
    {
        collapseActivitiesMenu = !collapseActivitiesMenu;
        collapseReportsMenu = true;
    }

    private void ToggleReports()
    {
        collapseReportsMenu = !collapseReportsMenu;
        collapseActivitiesMenu = true;
    }

    private void CollapseDropdownMenus()
    {
        collapseActivitiesMenu = true;
        collapseReportsMenu = true;
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

