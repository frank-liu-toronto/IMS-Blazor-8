@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (inventories is not null && inventories.Count > 0)
        {
            foreach (var inv in inventories)
            {
                <tr>
                    <td>@inv.InventoryName</td>
                    <td>@inv.Quantity</td>
                    <td>@inv.Price.ToString("c")</td>
                    <td>
                        <button 
                            type="button"
                            class="btn btn-light">
                            Edit
                        </button>
                    </td>
                </tr>                    
            }
        }
    </tbody>
</table>

@code {
    private List<Inventory>? inventories;

    protected override async Task OnInitializedAsync()
    {
        inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync()).ToList();
    }
}